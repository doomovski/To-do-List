// –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
const searchBar = document.querySelector('.search-bar');
const taskInput = searchBar.querySelector('.add-task');
const addTaskButton = searchBar.querySelector('.button-do');
const taskList = document.querySelector('.task-list');
const trashIcon = searchBar.querySelector('span'); // –ò–∫–æ–Ω–∫–∞ üóëÔ∏è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
function addTask(text) {
    if (!text || text.trim() === '') return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ —Ç–µ–∫—Å—Ç

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏
    const taskItem = document.createElement('div');
    taskItem.className = 'task-item';

    // HTML –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏, –≤–∫–ª—é—á–∞—è –≤–∞—à –¥–∏–∑–∞–π–Ω —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–µ–π
    taskItem.innerHTML = `
        <input class="check-box" type="checkbox">
        <span class="task-text">${text}</span>
        <div class="verticalLine-item">/</div>
        <div class="task-icons">
            <span class="icon" onclick="editTask(this)">‚öôÔ∏è</span>
            <span class="icon" onclick="deleteTask(this)">üóëÔ∏è</span>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ search-bar
    taskList.insertBefore(taskItem, taskList.querySelector('.task-item') || null);

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    taskInput.value = '';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –¥–µ–ª–æ"
addTaskButton.addEventListener('click', () => {
    const taskText = taskInput.value.trim();
    addTask(taskText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
taskInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        const taskText = taskInput.value.trim();
        addTask(taskText);
    }
});

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–¥–ª—è –∏–∫–æ–Ω–∫–∏ üóëÔ∏è –≤ .task-item)
function deleteTask(icon) {
    const taskItem = icon.closest('.task-item');
    if (taskItem) {
        taskItem.remove();
    }
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ (–¥–ª—è –∏–∫–æ–Ω–∫–∏ ‚öôÔ∏è)
function editTask(icon) {
    const taskItem = icon.closest('.task-item');
    const taskText = taskItem.querySelector('.task-text');
    const currentText = taskText.textContent;

    // –°–æ–∑–¥–∞—ë–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const input = document.createElement('input');
    input.value = currentText;
    input.className = 'edit-input';
    input.style.width = '200px'; // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è –≤–≤–æ–¥–∞
    input.style.borderRadius = '5px';
    input.style.padding = '5px';
    input.style.background = 'rgba(255, 255, 255, 0.1)'; // –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–º—É –¥–∏–∑–∞–π–Ω—É
    input.style.color = 'white'; // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞

    // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    taskText.replaceWith(input);

    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    input.focus();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            const newText = input.value.trim();
            if (newText) {
                const newSpan = document.createElement('span');
                newSpan.className = 'task-text';
                newSpan.textContent = newText;
                input.replaceWith(newSpan);
            }
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç –≤–Ω–µ –ø–æ–ª—è)
    input.addEventListener('blur', () => {
        const newText = input.value.trim();
        if (newText) {
            const newSpan = document.createElement('span');
            newSpan.className = 'task-text';
            newSpan.textContent = newText;
            input.replaceWith(newSpan);
        } else {
            input.replaceWith(taskText); // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á (–ø–æ –∫–ª–∏–∫—É –Ω–∞ –∏–∫–æ–Ω–∫—É üóëÔ∏è –≤ search-bar)
trashIcon.addEventListener('click', () => {
    const taskItems = taskList.querySelectorAll('.task-item');
    taskItems.forEach(item => item.remove());
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è checkbox (–æ—Ç–º–µ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π/–Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π)
taskList.addEventListener('change', (e) => {
    if (e.target.className === 'check-box') {
        const taskItem = e.target.closest('.task-item');
        const taskText = taskItem.querySelector('.task-text');
        if (e.target.checked) {
            taskText.style.textDecoration = 'line-through'; // –ó–∞—á—ë—Ä–∫–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
            taskText.style.opacity = '0.5'; // –°–Ω–∏–∂–∞–µ–º –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
        } else {
            taskText.style.textDecoration = 'none'; // –£–±–∏—Ä–∞–µ–º –∑–∞—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ
            taskText.style.opacity = '1'; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
        }
    }
});

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–µ–¥—É—â–∏–º–∏ –Ω—É–ª—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:15:00)
    function padZero(num) {
        return num.toString().padStart(2, '0');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –¥–∞—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    function getFormattedDate() {
        const now = new Date();
        const days = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
        const months = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];
        
        const dayOfWeek = days[now.getDay()];
        const day = now.getDate();
        const month = months[now.getMonth()];
        const year = now.getFullYear();

        return `${dayOfWeek}, ${day} ${month}`;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú:–°–°
    function getFormattedTime() {
        const now = new Date();
        const hours = padZero(now.getHours());
        const minutes = padZero(now.getMinutes());
        const seconds = padZero(now.getSeconds());
        return `${hours}:${minutes}:${seconds}`;
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    function updateDateTime() {
        const date2Element = document.querySelector('.date2');
        const timeElement = document.querySelector('.time');

        if (date2Element && timeElement) {
            date2Element.textContent = getFormattedDate();
            timeElement.textContent = getFormattedTime();
        }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateDateTime();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É (1000 –º—Å)
    setInterval(updateDateTime, 1000);
